#version 300 es
#extension GL_OES_EGL_image_external : require
/*
   Copyright 2012 Harri Smatt

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
 */

precision mediump float;

uniform sampler2D sTexture;

in vec2 vTextureCoord;
out vec4 outcolor;

uniform vec2 uPixelSize;

vec3 gabor(vec3 color, sampler2D tex, vec2 texturePos) {

	float dx = uPixelSize.x;
	float dy = uPixelSize.y;

	mat3 kernel = mat3(
					0.012993472628295422, 0.2959046959877014, 0.055872444063425064,
					0.21316108107566833, 1.0, 0.21316108107566833,
					0.055872444063425064, 0.2959046959877014, 0.012993472628295422);

	mat3 data;

    float kern[441] = float[](0.0016724007, 0.0017360891, -0.013440105, -0.034983475, 0.030616315, 0.19982132, 0.10962269, -0.44849443, -0.6169414, 0.28533867, 0.98418254, 0.28533867, -0.6169414, -0.44849443, 0.10962269, 0.19982132, 0.030616315, -0.034983475, -0.013440105, 0.0017360891, 0.0016724007,
    0.0016774747, 0.0017413564, -0.013480882, -0.035089612, 0.030709203, 0.20042758, 0.10995529, -0.44985515, -0.6188131, 0.28620437, 0.9871685, 0.28620437, -0.6188131, -0.44985515, 0.10995529, 0.20042758, 0.030709203, -0.035089612, -0.013480882, 0.0017413564, 0.0016774747,
    0.0016820272, 0.0017460821, -0.013517466, -0.03518485, 0.030792551, 0.20097156, 0.11025372, -0.4510761, -0.6204927, 0.28698117, 0.9898478, 0.28698117, -0.6204927, -0.4510761, 0.11025372, 0.20097156, 0.030792551, -0.03518485, -0.013517466, 0.0017460821, 0.0016820272,
    0.0016860553, 0.0017502639, -0.013549838, -0.035269096, 0.030866278, 0.20145278, 0.11051772, -0.45215616, -0.6219784, 0.28766832, 0.99221796, 0.28766832, -0.6219784, -0.45215616, 0.11051772, 0.20145278, 0.030866278, -0.035269096, -0.013549838, 0.0017502639, 0.0016860553,
    0.0016895538, 0.0017538954, -0.013577954, -0.035342276, 0.030930324, 0.20187075, 0.11074702, -0.45309436, -0.6232689, 0.2882652, 0.99427664, 0.2882652, -0.6232689, -0.45309436, 0.11074702, 0.20187075, 0.030930324, -0.035342276, -0.013577954, 0.0017538954, 0.0016895538,
    0.0016925192, 0.0017569737, -0.013601785, -0.035404317, 0.03098462, 0.20222512, 0.110941425, -0.4538897, -0.624363, 0.2887712, 0.996022, 0.2887712, -0.624363, -0.4538897, 0.110941425, 0.20222512, 0.03098462, -0.035404317, -0.013601785, 0.0017569737, 0.0016925192,
    0.0016949496, 0.0017594966, -0.013621315, -0.035455152, 0.03102911, 0.2025155, 0.11110072, -0.45454147, -0.6252596, 0.28918588, 0.99745226, 0.28918588, -0.6252596, -0.45454147, 0.11110072, 0.2025155, 0.03102911, -0.035455152, -0.013621315, 0.0017594966, 0.0016949496,
    0.0016968425, 0.0017614616, -0.013636528, -0.03549475, 0.031063763, 0.20274167, 0.1112248, -0.45504904, -0.6259578, 0.28950882, 0.9985661, 0.28950882, -0.6259578, -0.45504904, 0.1112248, 0.20274167, 0.031063763, -0.03549475, -0.013636528, 0.0017614616, 0.0016968425,
    0.0016981954, 0.001762866, -0.013647402, -0.035523057, 0.031088538, 0.20290335, 0.11131349, -0.45541197, -0.626457, 0.2897397, 0.99936247, 0.2897397, -0.626457, -0.45541197, 0.11131349, 0.20290335, 0.031088538, -0.035523057, -0.013647402, 0.001762866, 0.0016981954,
    0.0016990078, 0.0017637094, -0.013653929, -0.03554005, 0.031103412, 0.20300041, 0.111366756, -0.45562986, -0.62675667, 0.2898783, 0.99984056, 0.2898783, -0.62675667, -0.45562986, 0.111366756, 0.20300041, 0.031103412, -0.03554005, -0.013653929, 0.0017637094, 0.0016990078,
    0.001699279, 0.001763991, -0.0136561105, -0.035545718, 0.03110837, 0.20303279, 0.11138451, -0.45570248, -0.6268567, 0.28992456, 1.0, 0.28992456, -0.6268567, -0.45570248, 0.11138451, 0.20303279, 0.03110837, -0.035545718, -0.0136561105, 0.001763991, 0.001699279,
    0.0016990078, 0.0017637094, -0.013653929, -0.03554005, 0.031103412, 0.20300041, 0.111366756, -0.45562986, -0.62675667, 0.2898783, 0.99984056, 0.2898783, -0.62675667, -0.45562986, 0.111366756, 0.20300041, 0.031103412, -0.03554005, -0.013653929, 0.0017637094, 0.0016990078,
    0.0016981954, 0.001762866, -0.013647402, -0.035523057, 0.031088538, 0.20290335, 0.11131349, -0.45541197, -0.626457, 0.2897397, 0.99936247, 0.2897397, -0.626457, -0.45541197, 0.11131349, 0.20290335, 0.031088538, -0.035523057, -0.013647402, 0.001762866, 0.0016981954,
    0.0016968425, 0.0017614616, -0.013636528, -0.03549475, 0.031063763, 0.20274167, 0.1112248, -0.45504904, -0.6259578, 0.28950882, 0.9985661, 0.28950882, -0.6259578, -0.45504904, 0.1112248, 0.20274167, 0.031063763, -0.03549475, -0.013636528, 0.0017614616, 0.0016968425,
    0.0016949496, 0.0017594966, -0.013621315, -0.035455152, 0.03102911, 0.2025155, 0.11110072, -0.45454147, -0.6252596, 0.28918588, 0.99745226, 0.28918588, -0.6252596, -0.45454147, 0.11110072, 0.2025155, 0.03102911, -0.035455152, -0.013621315, 0.0017594966, 0.0016949496,
    0.0016925192, 0.0017569737, -0.013601785, -0.035404317, 0.03098462, 0.20222512, 0.110941425, -0.4538897, -0.624363, 0.2887712, 0.996022, 0.2887712, -0.624363, -0.4538897, 0.110941425, 0.20222512, 0.03098462, -0.035404317, -0.013601785, 0.0017569737, 0.0016925192,
    0.0016895538, 0.0017538954, -0.013577954, -0.035342276, 0.030930324, 0.20187075, 0.11074702, -0.45309436, -0.6232689, 0.2882652, 0.99427664, 0.2882652, -0.6232689, -0.45309436, 0.11074702, 0.20187075, 0.030930324, -0.035342276, -0.013577954, 0.0017538954, 0.0016895538,
    0.0016860553, 0.0017502639, -0.013549838, -0.035269096, 0.030866278, 0.20145278, 0.11051772, -0.45215616, -0.6219784, 0.28766832, 0.99221796, 0.28766832, -0.6219784, -0.45215616, 0.11051772, 0.20145278, 0.030866278, -0.035269096, -0.013549838, 0.0017502639, 0.0016860553,
    0.0016820272, 0.0017460821, -0.013517466, -0.03518485, 0.030792551, 0.20097156, 0.11025372, -0.4510761, -0.6204927, 0.28698117, 0.9898478, 0.28698117, -0.6204927, -0.4510761, 0.11025372, 0.20097156, 0.030792551, -0.03518485, -0.013517466, 0.0017460821, 0.0016820272,
    0.0016774747, 0.0017413564, -0.013480882, -0.035089612, 0.030709203, 0.20042758, 0.10995529, -0.44985515, -0.6188131, 0.28620437, 0.9871685, 0.28620437, -0.6188131, -0.44985515, 0.10995529, 0.20042758, 0.030709203, -0.035089612, -0.013480882, 0.0017413564, 0.0016774747,
    0.0016724007, 0.0017360891, -0.013440105, -0.034983475, 0.030616315, 0.19982132, 0.10962269, -0.44849443, -0.6169414, 0.28533867, 0.98418254, 0.28533867, -0.6169414, -0.44849443, 0.10962269, 0.19982132, 0.030616315, -0.034983475, -0.013440105, 0.0017360891, 0.0016724007
    );

	int kernel_width = 21;

	float product = 0.0;
	float red, green, blue, gray;
	int i, j;
	int offset = kernel_width / 2;

	for(i = -offset; i < offset; i++) {
		for(j = -offset; j < offset; j++) {

			red = texture(tex, vec2(texturePos.x + float(i)*dx, texturePos.y + float(j)*dy)).rgb.x;
			green = texture(tex, vec2(texturePos.x + float(i)*dx, texturePos.y + float(j)*dy)).rgb.y;
			blue = texture(tex, vec2(texturePos.x + float(i)*dx, texturePos.y + float(j)*dy)).rgb.z;

            //if((i == 0) && (j == 0))
			gray = (red + green + blue) / 3.0;

			product = product + (gray * kern[j+offset][i+offset]);
		}
	}

	return vec3(product, product, product);
}

void main() {
	vec3 color = texture(sTexture, vTextureCoord).rgb;

	color = gabor(color, sTexture, vTextureCoord);

	// Calculate brightness, contrast and saturation.
	// color = brightness(color, uBrightness);
	// color = contrast(color, uContrast);
	// color = saturation(color, uSaturation);

	// Calculate darkened corners.
	//const float sqrt2 = 1.414213562373;
	//float len = distance(vTextureCoord, vec2(0.5)) * sqrt2;
	//len = smoothstep(1.0 - uCornerRadius, 1.0, len);
	//color *= mix(0.5, 1.0, 1.0 - len);
	outcolor = vec4(color, 1.0);
}
